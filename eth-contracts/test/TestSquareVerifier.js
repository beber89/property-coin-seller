// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const VerifierContract = artifacts.require('Verifier');

const proof = require('./proof.json');
contract('Verifier', accounts => {
  const account_one = accounts[0];
  describe('Initialize Verifier Contract', function () {
    beforeEach(async function () { 
        this.contract = await VerifierContract.new({from: account_one});
    });
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
      it('Test verification with correct proof', async function () { 
        let result = await this.contract.verifyTx.call(proof.proof.a , proof.proof.b, proof.proof.c, proof.inputs);
        assert.equal(result, true, "Inputs should have been verified !!");
      });

    
// Test verification with incorrect proof
      it('Test verification with incorrect proof', async function () { 
        let result = await this.contract.verifyTx.call(proof.proof.a , proof.proof.b, proof.proof.c, ["0x0011", "0x1122"]);
        assert.equal(result, false, "Inputs should have not been verified !!");
      });

  });
});
